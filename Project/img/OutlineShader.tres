[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float outline_width : hint_range(0.0,30.0);
uniform vec4 outline_color : hint_color;

uniform vec3 color_value_1 = vec3(1.0,0.0,0.0);
uniform vec3 color_value_2 = vec3(0.0,1.0,0.0);
uniform vec3 color_value_3 = vec3(0.0,0.0,1.0);

//uniform vec3 WHITE = vec3(1.0,1.0,1.0);
//uniform vec3 BLACK = vec3(0.0,0.0,0.0);

uniform float period = 0.1;

void fragment()
{
	vec3 color_key_1 = vec3(1.0,0.0,0.0);
	vec3 color_key_2 = vec3(0.0,1.0,0.0);
	vec3 color_key_3 = vec3(0.0,0.0,1.0);
	COLOR = texture(TEXTURE,UV);
	COLOR.rgb -=0.99999;
	COLOR.rgb *= 100000.0;
	COLOR.r = max(COLOR.r,0.0);
	COLOR.g = max(COLOR.g,0.0);
	COLOR.b = max(COLOR.b,0.0);
	COLOR.r = min(COLOR.r,1.0);
	COLOR.g = min(COLOR.g,1.0);
	COLOR.b = min(COLOR.b,1.0);
	if(COLOR.rgb == color_key_1){COLOR.rgb += color_value_1;}
	if(COLOR.rgb == color_key_2){COLOR.rgb += color_value_2;}
	if(COLOR.rgb == color_key_3){COLOR.rgb += color_value_3;}
	//if(COLOR.rgb == WHITE){COLOR.rgb += vec3(0.0,0.0,0.0);}
	//if(COLOR.rgb == BLACK){COLOR.rgb += vec3(0.5,0.5,1.0);}
	
	vec2 size = outline_width*TEXTURE_PIXEL_SIZE;
    vec4 sprite_color = texture(TEXTURE, UV);
   
    float alpha = sprite_color.a;
    alpha += texture(TEXTURE, UV + vec2(0.0, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(0.0, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
   
    vec3 final_color = mix(outline_color.rgb, COLOR.rgb, sprite_color.a);
    COLOR = vec4(final_color, clamp(alpha, 0.0, 1.0));
}

void vertex() {
	VERTEX.y +=8.0*sin(TIME)*(1.0-UV.y);
}"

[resource]
shader = SubResource( 1 )
shader_param/outline_width = 8.0
shader_param/outline_color = Color( 1, 1, 1, 1 )
shader_param/color_value_1 = Vector3( 1, 0, 0 )
shader_param/color_value_2 = Vector3( 0, 1, 0 )
shader_param/color_value_3 = Vector3( 0, 0, 1 )
shader_param/period = 0.1
